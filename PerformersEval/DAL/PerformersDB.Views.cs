//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsDD9149505A4319640EE374CB92F4919700AAFDA360FDFFEB5210DD5D72FEDD7F))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySetsDD9149505A4319640EE374CB92F4919700AAFDA360FDFFEB5210DD5D72FEDD7F : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySetsDD9149505A4319640EE374CB92F4919700AAFDA360FDFFEB5210DD5D72FEDD7F()
        {
            this.EdmEntityContainerName = "PerformersDB";
            this.StoreEntityContainerName = "CodeFirstDatabase";
            this.HashOverMappingClosure = "79972d68ddcc4da709c4d63fb9a3c1c811046126ff8d4240ebf640a0d4afea83";
            this.HashOverAllExtentViews = "f8db289856ff8a72c4f1e487c1594cd0a848099d36269a3d14e57c9fc2943532";
            this.ViewCount = 4;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Performer
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Performer", @"
    SELECT VALUE -- Constructing Performer
        [CodeFirstDatabaseSchema.Performer](T1.Performer_PerformerID, T1.Performer_FullName, T1.Performer_FullName2, T1.Performer_Addr1, T1.Performer_Addr2, T1.Performer_City, T1.Performer_State, T1.Performer_Zip, T1.Performer_PerformerEmail, T1.Performer_ProgramName, T1.Performer_ContractDate, T1.Performer_Payment, T1.Performer_PersonalInfoAckSig, T1.Performer_OfficialAckSig, T1.Performer_SignedDate, T1.Performer_PrintName, T1.Performer_Title)
    FROM (
        SELECT 
            T.PerformerID AS Performer_PerformerID, 
            T.FullName AS Performer_FullName, 
            T.FullName2 AS Performer_FullName2, 
            T.Addr1 AS Performer_Addr1, 
            T.Addr2 AS Performer_Addr2, 
            T.City AS Performer_City, 
            T.State AS Performer_State, 
            T.Zip AS Performer_Zip, 
            T.PerformerEmail AS Performer_PerformerEmail, 
            T.ProgramName AS Performer_ProgramName, 
            T.ContractDate AS Performer_ContractDate, 
            T.Payment AS Performer_Payment, 
            T.PersonalInfoAckSig AS Performer_PersonalInfoAckSig, 
            T.OfficialAckSig AS Performer_OfficialAckSig, 
            T.SignedDate AS Performer_SignedDate, 
            T.PrintName AS Performer_PrintName, 
            T.Title AS Performer_Title, 
            True AS _from0
        FROM PerformersDB.Performers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for PerformersDB.Performers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("PerformersDB.Performers", @"
    SELECT VALUE -- Constructing Performers
        [PerformersEval.DAL.Performer](T1.Performer_PerformerID, T1.Performer_FullName, T1.Performer_FullName2, T1.Performer_Addr1, T1.Performer_Addr2, T1.Performer_City, T1.Performer_State, T1.Performer_Zip, T1.Performer_PerformerEmail, T1.Performer_ProgramName, T1.Performer_ContractDate, T1.Performer_Payment, T1.Performer_PersonalInfoAckSig, T1.Performer_OfficialAckSig, T1.Performer_SignedDate, T1.Performer_PrintName, T1.Performer_Title)
    FROM (
        SELECT 
            T.PerformerID AS Performer_PerformerID, 
            T.FullName AS Performer_FullName, 
            T.FullName2 AS Performer_FullName2, 
            T.Addr1 AS Performer_Addr1, 
            T.Addr2 AS Performer_Addr2, 
            T.City AS Performer_City, 
            T.State AS Performer_State, 
            T.Zip AS Performer_Zip, 
            T.PerformerEmail AS Performer_PerformerEmail, 
            T.ProgramName AS Performer_ProgramName, 
            T.ContractDate AS Performer_ContractDate, 
            T.Payment AS Performer_Payment, 
            T.PersonalInfoAckSig AS Performer_PersonalInfoAckSig, 
            T.OfficialAckSig AS Performer_OfficialAckSig, 
            T.SignedDate AS Performer_SignedDate, 
            T.PrintName AS Performer_PrintName, 
            T.Title AS Performer_Title, 
            True AS _from0
        FROM CodeFirstDatabase.Performer AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CodeFirstDatabase.Vendor
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(7040);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Vendor\r\n        [CodeFirstDatabaseSchema.Vend");
            viewString.Append("or](T1.Vendor_VendorID, T1.[Vendor.SentBy_Name], T1.[Vendor.SentBy_Department], ");
            viewString.Append("T1.[Vendor.SentBy_QIC], T1.[Vendor.SentBy_Phone], T1.[Vendor.SentBy_FAX], T1.[Ve");
            viewString.Append("ndor.Request_AddNewVendor], T1.[Vendor.Request_AddNewDBAForExistingVendor], T1.[");
            viewString.Append("Vendor.Request_AddNewAddressForExistingVendor], T1.[Vendor.Request_ChangeNameFor");
            viewString.Append("ExistingVendor], T1.[Vendor.Request_ChangeDBAForExistingVendor], T1.[Vendor.Requ");
            viewString.Append("est_ChangeAddressForExistingVendor], T1.[Vendor.Vendor_ALCOLINKNumber], T1.[Vend");
            viewString.Append("or.Vendor_FullName], T1.[Vendor.Vendor_DBA], T1.[Vendor.Vendor_Entity_Individual");
            viewString.Append("], T1.[Vendor.Vendor_Entity_SoleProprietor], T1.[Vendor.Vendor_Entity_Partnershi");
            viewString.Append("p], T1.[Vendor.Vendor_Entity_Corporation], T1.[Vendor.Vendor_Entity_TaxExempted]");
            viewString.Append(", T1.[Vendor.Vendor_Entity_GovOrTrust], T1.[Vendor.Vendor_Payment_GoodsOnly], T1");
            viewString.Append(".[Vendor.Vendor_Payment_GoodsAndServices], T1.[Vendor.Vendor_Payment_RentsLeases");
            viewString.Append("], T1.[Vendor.Vendor_Payment_RentsLeasesAsAgent], T1.[Vendor.Vendor_Payment_Medi");
            viewString.Append("calService], T1.[Vendor.Vendor_Payment_LegalService], T1.[Vendor.Vendor_Payment_");
            viewString.Append("OtherServices], T1.[Vendor.Vendor_Payment_OtherServices_Desc], T1.[Vendor.Vendor");
            viewString.Append("_Payment_Settlement], T1.[Vendor.Vendor_Payment_CourtAppointedServices], T1.[Ven");
            viewString.Append("dor.Vendor_FederalTaxID], T1.[Vendor.Vendor_Addr1], T1.[Vendor.Vendor_Addr2], T1");
            viewString.Append(".[Vendor.Vendor_City], T1.[Vendor.Vendor_State], T1.[Vendor.Vendor_Zip], T1.[Ven");
            viewString.Append("dor.Vendor_Local], T1.[Vendor.Vendor_NonLocal], T1.[Vendor.Contact_Name], T1.[Ve");
            viewString.Append("ndor.Contact_Phone], T1.[Vendor.Contact_FAX], T1.[Vendor.Contact_Email], T1.[Ven");
            viewString.Append("dor.Composition_NonProfit_Public_Yes], T1.[Vendor.Composition_NonProfit_Public_N");
            viewString.Append("o], T1.[Vendor.Ethnicity_Black], T1.[Vendor.Ethnicity_Hispanic], T1.[Vendor.Ethn");
            viewString.Append("icity_Indian], T1.[Vendor.Ethnicity_Hawaiian], T1.[Vendor.Ethnicity_Asian], T1.[");
            viewString.Append("Vendor.Ethnicity_MultiEthnic_Minority_Ownership], T1.[Vendor.Ethnicity_Caucasian");
            viewString.Append("], T1.[Vendor.Ethnicity_MultiEthnic_Ownership], T1.[Vendor.Ethnicity_Filipino], ");
            viewString.Append("T1.[Vendor.Gender_Female], T1.[Vendor.Gender_Male], T1.Vendor_ProductsServices, ");
            viewString.Append("T1.[Vendor.Auditor_Name], T1.[Vendor.Auditor_SignedDate], T1.[Vendor.Auditor_Add");
            viewString.Append("], T1.[Vendor.Assigned_ALCOLINK_Number], T1.[Vendor.Auditor_CannotAdd], T1.[Vend");
            viewString.Append("or.Auditor_CannotAdd_Reasons], T1.[Vendor.Auditor_Resubmit])\r\n    FROM (\r\n      ");
            viewString.Append("  SELECT \r\n            T.VendorID AS Vendor_VendorID, \r\n            T.SentBy_Nam");
            viewString.Append("e AS [Vendor.SentBy_Name], \r\n            T.SentBy_Department AS [Vendor.SentBy_D");
            viewString.Append("epartment], \r\n            T.SentBy_QIC AS [Vendor.SentBy_QIC], \r\n            T.S");
            viewString.Append("entBy_Phone AS [Vendor.SentBy_Phone], \r\n            T.SentBy_FAX AS [Vendor.Sent");
            viewString.Append("By_FAX], \r\n            T.Request_AddNewVendor AS [Vendor.Request_AddNewVendor], ");
            viewString.Append("\r\n            T.Request_AddNewDBAForExistingVendor AS [Vendor.Request_AddNewDBAF");
            viewString.Append("orExistingVendor], \r\n            T.Request_AddNewAddressForExistingVendor AS [Ve");
            viewString.Append("ndor.Request_AddNewAddressForExistingVendor], \r\n            T.Request_ChangeName");
            viewString.Append("ForExistingVendor AS [Vendor.Request_ChangeNameForExistingVendor], \r\n           ");
            viewString.Append(" T.Request_ChangeDBAForExistingVendor AS [Vendor.Request_ChangeDBAForExistingVen");
            viewString.Append("dor], \r\n            T.Request_ChangeAddressForExistingVendor AS [Vendor.Request_");
            viewString.Append("ChangeAddressForExistingVendor], \r\n            T.Vendor_ALCOLINKNumber AS [Vendo");
            viewString.Append("r.Vendor_ALCOLINKNumber], \r\n            T.Vendor_FullName AS [Vendor.Vendor_Full");
            viewString.Append("Name], \r\n            T.Vendor_DBA AS [Vendor.Vendor_DBA], \r\n            T.Vendor");
            viewString.Append("_Entity_Individual AS [Vendor.Vendor_Entity_Individual], \r\n            T.Vendor_");
            viewString.Append("Entity_SoleProprietor AS [Vendor.Vendor_Entity_SoleProprietor], \r\n            T.");
            viewString.Append("Vendor_Entity_Partnership AS [Vendor.Vendor_Entity_Partnership], \r\n            T");
            viewString.Append(".Vendor_Entity_Corporation AS [Vendor.Vendor_Entity_Corporation], \r\n            ");
            viewString.Append("T.Vendor_Entity_TaxExempted AS [Vendor.Vendor_Entity_TaxExempted], \r\n           ");
            viewString.Append(" T.Vendor_Entity_GovOrTrust AS [Vendor.Vendor_Entity_GovOrTrust], \r\n            ");
            viewString.Append("T.Vendor_Payment_GoodsOnly AS [Vendor.Vendor_Payment_GoodsOnly], \r\n            T");
            viewString.Append(".Vendor_Payment_GoodsAndServices AS [Vendor.Vendor_Payment_GoodsAndServices], \r\n");
            viewString.Append("            T.Vendor_Payment_RentsLeases AS [Vendor.Vendor_Payment_RentsLeases],");
            viewString.Append(" \r\n            T.Vendor_Payment_RentsLeasesAsAgent AS [Vendor.Vendor_Payment_Ren");
            viewString.Append("tsLeasesAsAgent], \r\n            T.Vendor_Payment_MedicalService AS [Vendor.Vendo");
            viewString.Append("r_Payment_MedicalService], \r\n            T.Vendor_Payment_LegalService AS [Vendo");
            viewString.Append("r.Vendor_Payment_LegalService], \r\n            T.Vendor_Payment_OtherServices AS ");
            viewString.Append("[Vendor.Vendor_Payment_OtherServices], \r\n            T.Vendor_Payment_OtherServi");
            viewString.Append("ces_Desc AS [Vendor.Vendor_Payment_OtherServices_Desc], \r\n            T.Vendor_P");
            viewString.Append("ayment_Settlement AS [Vendor.Vendor_Payment_Settlement], \r\n            T.Vendor_");
            viewString.Append("Payment_CourtAppointedServices AS [Vendor.Vendor_Payment_CourtAppointedServices]");
            viewString.Append(", \r\n            T.Vendor_FederalTaxID AS [Vendor.Vendor_FederalTaxID], \r\n       ");
            viewString.Append("     T.Vendor_Addr1 AS [Vendor.Vendor_Addr1], \r\n            T.Vendor_Addr2 AS [V");
            viewString.Append("endor.Vendor_Addr2], \r\n            T.Vendor_City AS [Vendor.Vendor_City], \r\n    ");
            viewString.Append("        T.Vendor_State AS [Vendor.Vendor_State], \r\n            T.Vendor_Zip AS [");
            viewString.Append("Vendor.Vendor_Zip], \r\n            T.Vendor_Local AS [Vendor.Vendor_Local], \r\n   ");
            viewString.Append("         T.Vendor_NonLocal AS [Vendor.Vendor_NonLocal], \r\n            T.Contact_");
            viewString.Append("Name AS [Vendor.Contact_Name], \r\n            T.Contact_Phone AS [Vendor.Contact_");
            viewString.Append("Phone], \r\n            T.Contact_FAX AS [Vendor.Contact_FAX], \r\n            T.Con");
            viewString.Append("tact_Email AS [Vendor.Contact_Email], \r\n            T.Composition_NonProfit_Publ");
            viewString.Append("ic_Yes AS [Vendor.Composition_NonProfit_Public_Yes], \r\n            T.Composition");
            viewString.Append("_NonProfit_Public_No AS [Vendor.Composition_NonProfit_Public_No], \r\n            ");
            viewString.Append("T.Ethnicity_Black AS [Vendor.Ethnicity_Black], \r\n            T.Ethnicity_Hispani");
            viewString.Append("c AS [Vendor.Ethnicity_Hispanic], \r\n            T.Ethnicity_Indian AS [Vendor.Et");
            viewString.Append("hnicity_Indian], \r\n            T.Ethnicity_Hawaiian AS [Vendor.Ethnicity_Hawaiia");
            viewString.Append("n], \r\n            T.Ethnicity_Asian AS [Vendor.Ethnicity_Asian], \r\n            T");
            viewString.Append(".Ethnicity_MultiEthnic_Minority_Ownership AS [Vendor.Ethnicity_MultiEthnic_Minor");
            viewString.Append("ity_Ownership], \r\n            T.Ethnicity_Caucasian AS [Vendor.Ethnicity_Caucasi");
            viewString.Append("an], \r\n            T.Ethnicity_MultiEthnic_Ownership AS [Vendor.Ethnicity_MultiE");
            viewString.Append("thnic_Ownership], \r\n            T.Ethnicity_Filipino AS [Vendor.Ethnicity_Filipi");
            viewString.Append("no], \r\n            T.Gender_Female AS [Vendor.Gender_Female], \r\n            T.Ge");
            viewString.Append("nder_Male AS [Vendor.Gender_Male], \r\n            T.ProductsServices AS Vendor_Pr");
            viewString.Append("oductsServices, \r\n            T.Auditor_Name AS [Vendor.Auditor_Name], \r\n       ");
            viewString.Append("     T.Auditor_SignedDate AS [Vendor.Auditor_SignedDate], \r\n            T.Audito");
            viewString.Append("r_Add AS [Vendor.Auditor_Add], \r\n            T.Assigned_ALCOLINK_Number AS [Vend");
            viewString.Append("or.Assigned_ALCOLINK_Number], \r\n            T.Auditor_CannotAdd AS [Vendor.Audit");
            viewString.Append("or_CannotAdd], \r\n            T.Auditor_CannotAdd_Reasons AS [Vendor.Auditor_Cann");
            viewString.Append("otAdd_Reasons], \r\n            T.Auditor_Resubmit AS [Vendor.Auditor_Resubmit], \r");
            viewString.Append("\n            True AS _from0\r\n        FROM PerformersDB.Vendors AS T\r\n    ) AS T1");
            viewString.Append("");
            return new System.Collections.Generic.KeyValuePair<string, string>("CodeFirstDatabase.Vendor", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for PerformersDB.Vendors
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(7040);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Vendors\r\n        [PerformersEval.DAL.Vendor](");
            viewString.Append("T1.Vendor_VendorID, T1.[Vendor.SentBy_Name], T1.[Vendor.SentBy_Department], T1.[");
            viewString.Append("Vendor.SentBy_QIC], T1.[Vendor.SentBy_Phone], T1.[Vendor.SentBy_FAX], T1.[Vendor");
            viewString.Append(".Request_AddNewVendor], T1.[Vendor.Request_AddNewDBAForExistingVendor], T1.[Vend");
            viewString.Append("or.Request_AddNewAddressForExistingVendor], T1.[Vendor.Request_ChangeNameForExis");
            viewString.Append("tingVendor], T1.[Vendor.Request_ChangeDBAForExistingVendor], T1.[Vendor.Request_");
            viewString.Append("ChangeAddressForExistingVendor], T1.[Vendor.Vendor_ALCOLINKNumber], T1.[Vendor.V");
            viewString.Append("endor_FullName], T1.[Vendor.Vendor_DBA], T1.[Vendor.Vendor_Entity_Individual], T");
            viewString.Append("1.[Vendor.Vendor_Entity_SoleProprietor], T1.[Vendor.Vendor_Entity_Partnership], ");
            viewString.Append("T1.[Vendor.Vendor_Entity_Corporation], T1.[Vendor.Vendor_Entity_TaxExempted], T1");
            viewString.Append(".[Vendor.Vendor_Entity_GovOrTrust], T1.[Vendor.Vendor_Payment_GoodsOnly], T1.[Ve");
            viewString.Append("ndor.Vendor_Payment_GoodsAndServices], T1.[Vendor.Vendor_Payment_RentsLeases], T");
            viewString.Append("1.[Vendor.Vendor_Payment_RentsLeasesAsAgent], T1.[Vendor.Vendor_Payment_MedicalS");
            viewString.Append("ervice], T1.[Vendor.Vendor_Payment_LegalService], T1.[Vendor.Vendor_Payment_Othe");
            viewString.Append("rServices], T1.[Vendor.Vendor_Payment_OtherServices_Desc], T1.[Vendor.Vendor_Pay");
            viewString.Append("ment_Settlement], T1.[Vendor.Vendor_Payment_CourtAppointedServices], T1.[Vendor.");
            viewString.Append("Vendor_FederalTaxID], T1.[Vendor.Vendor_Addr1], T1.[Vendor.Vendor_Addr2], T1.[Ve");
            viewString.Append("ndor.Vendor_City], T1.[Vendor.Vendor_State], T1.[Vendor.Vendor_Zip], T1.[Vendor.");
            viewString.Append("Vendor_Local], T1.[Vendor.Vendor_NonLocal], T1.[Vendor.Contact_Name], T1.[Vendor");
            viewString.Append(".Contact_Phone], T1.[Vendor.Contact_FAX], T1.[Vendor.Contact_Email], T1.[Vendor.");
            viewString.Append("Composition_NonProfit_Public_Yes], T1.[Vendor.Composition_NonProfit_Public_No], ");
            viewString.Append("T1.[Vendor.Ethnicity_Black], T1.[Vendor.Ethnicity_Hispanic], T1.[Vendor.Ethnicit");
            viewString.Append("y_Indian], T1.[Vendor.Ethnicity_Hawaiian], T1.[Vendor.Ethnicity_Asian], T1.[Vend");
            viewString.Append("or.Ethnicity_MultiEthnic_Minority_Ownership], T1.[Vendor.Ethnicity_Caucasian], T");
            viewString.Append("1.[Vendor.Ethnicity_MultiEthnic_Ownership], T1.[Vendor.Ethnicity_Filipino], T1.[");
            viewString.Append("Vendor.Gender_Female], T1.[Vendor.Gender_Male], T1.Vendor_ProductsServices, T1.[");
            viewString.Append("Vendor.Auditor_Name], T1.[Vendor.Auditor_SignedDate], T1.[Vendor.Auditor_Add], T");
            viewString.Append("1.[Vendor.Assigned_ALCOLINK_Number], T1.[Vendor.Auditor_CannotAdd], T1.[Vendor.A");
            viewString.Append("uditor_CannotAdd_Reasons], T1.[Vendor.Auditor_Resubmit])\r\n    FROM (\r\n        SE");
            viewString.Append("LECT \r\n            T.VendorID AS Vendor_VendorID, \r\n            T.SentBy_Name AS");
            viewString.Append(" [Vendor.SentBy_Name], \r\n            T.SentBy_Department AS [Vendor.SentBy_Depar");
            viewString.Append("tment], \r\n            T.SentBy_QIC AS [Vendor.SentBy_QIC], \r\n            T.SentB");
            viewString.Append("y_Phone AS [Vendor.SentBy_Phone], \r\n            T.SentBy_FAX AS [Vendor.SentBy_F");
            viewString.Append("AX], \r\n            T.Request_AddNewVendor AS [Vendor.Request_AddNewVendor], \r\n  ");
            viewString.Append("          T.Request_AddNewDBAForExistingVendor AS [Vendor.Request_AddNewDBAForEx");
            viewString.Append("istingVendor], \r\n            T.Request_AddNewAddressForExistingVendor AS [Vendor");
            viewString.Append(".Request_AddNewAddressForExistingVendor], \r\n            T.Request_ChangeNameForE");
            viewString.Append("xistingVendor AS [Vendor.Request_ChangeNameForExistingVendor], \r\n            T.R");
            viewString.Append("equest_ChangeDBAForExistingVendor AS [Vendor.Request_ChangeDBAForExistingVendor]");
            viewString.Append(", \r\n            T.Request_ChangeAddressForExistingVendor AS [Vendor.Request_Chan");
            viewString.Append("geAddressForExistingVendor], \r\n            T.Vendor_ALCOLINKNumber AS [Vendor.Ve");
            viewString.Append("ndor_ALCOLINKNumber], \r\n            T.Vendor_FullName AS [Vendor.Vendor_FullName");
            viewString.Append("], \r\n            T.Vendor_DBA AS [Vendor.Vendor_DBA], \r\n            T.Vendor_Ent");
            viewString.Append("ity_Individual AS [Vendor.Vendor_Entity_Individual], \r\n            T.Vendor_Enti");
            viewString.Append("ty_SoleProprietor AS [Vendor.Vendor_Entity_SoleProprietor], \r\n            T.Vend");
            viewString.Append("or_Entity_Partnership AS [Vendor.Vendor_Entity_Partnership], \r\n            T.Ven");
            viewString.Append("dor_Entity_Corporation AS [Vendor.Vendor_Entity_Corporation], \r\n            T.Ve");
            viewString.Append("ndor_Entity_TaxExempted AS [Vendor.Vendor_Entity_TaxExempted], \r\n            T.V");
            viewString.Append("endor_Entity_GovOrTrust AS [Vendor.Vendor_Entity_GovOrTrust], \r\n            T.Ve");
            viewString.Append("ndor_Payment_GoodsOnly AS [Vendor.Vendor_Payment_GoodsOnly], \r\n            T.Ven");
            viewString.Append("dor_Payment_GoodsAndServices AS [Vendor.Vendor_Payment_GoodsAndServices], \r\n    ");
            viewString.Append("        T.Vendor_Payment_RentsLeases AS [Vendor.Vendor_Payment_RentsLeases], \r\n ");
            viewString.Append("           T.Vendor_Payment_RentsLeasesAsAgent AS [Vendor.Vendor_Payment_RentsLe");
            viewString.Append("asesAsAgent], \r\n            T.Vendor_Payment_MedicalService AS [Vendor.Vendor_Pa");
            viewString.Append("yment_MedicalService], \r\n            T.Vendor_Payment_LegalService AS [Vendor.Ve");
            viewString.Append("ndor_Payment_LegalService], \r\n            T.Vendor_Payment_OtherServices AS [Ven");
            viewString.Append("dor.Vendor_Payment_OtherServices], \r\n            T.Vendor_Payment_OtherServices_");
            viewString.Append("Desc AS [Vendor.Vendor_Payment_OtherServices_Desc], \r\n            T.Vendor_Payme");
            viewString.Append("nt_Settlement AS [Vendor.Vendor_Payment_Settlement], \r\n            T.Vendor_Paym");
            viewString.Append("ent_CourtAppointedServices AS [Vendor.Vendor_Payment_CourtAppointedServices], \r\n");
            viewString.Append("            T.Vendor_FederalTaxID AS [Vendor.Vendor_FederalTaxID], \r\n           ");
            viewString.Append(" T.Vendor_Addr1 AS [Vendor.Vendor_Addr1], \r\n            T.Vendor_Addr2 AS [Vendo");
            viewString.Append("r.Vendor_Addr2], \r\n            T.Vendor_City AS [Vendor.Vendor_City], \r\n        ");
            viewString.Append("    T.Vendor_State AS [Vendor.Vendor_State], \r\n            T.Vendor_Zip AS [Vend");
            viewString.Append("or.Vendor_Zip], \r\n            T.Vendor_Local AS [Vendor.Vendor_Local], \r\n       ");
            viewString.Append("     T.Vendor_NonLocal AS [Vendor.Vendor_NonLocal], \r\n            T.Contact_Name");
            viewString.Append(" AS [Vendor.Contact_Name], \r\n            T.Contact_Phone AS [Vendor.Contact_Phon");
            viewString.Append("e], \r\n            T.Contact_FAX AS [Vendor.Contact_FAX], \r\n            T.Contact");
            viewString.Append("_Email AS [Vendor.Contact_Email], \r\n            T.Composition_NonProfit_Public_Y");
            viewString.Append("es AS [Vendor.Composition_NonProfit_Public_Yes], \r\n            T.Composition_Non");
            viewString.Append("Profit_Public_No AS [Vendor.Composition_NonProfit_Public_No], \r\n            T.Et");
            viewString.Append("hnicity_Black AS [Vendor.Ethnicity_Black], \r\n            T.Ethnicity_Hispanic AS");
            viewString.Append(" [Vendor.Ethnicity_Hispanic], \r\n            T.Ethnicity_Indian AS [Vendor.Ethnic");
            viewString.Append("ity_Indian], \r\n            T.Ethnicity_Hawaiian AS [Vendor.Ethnicity_Hawaiian], ");
            viewString.Append("\r\n            T.Ethnicity_Asian AS [Vendor.Ethnicity_Asian], \r\n            T.Eth");
            viewString.Append("nicity_MultiEthnic_Minority_Ownership AS [Vendor.Ethnicity_MultiEthnic_Minority_");
            viewString.Append("Ownership], \r\n            T.Ethnicity_Caucasian AS [Vendor.Ethnicity_Caucasian],");
            viewString.Append(" \r\n            T.Ethnicity_MultiEthnic_Ownership AS [Vendor.Ethnicity_MultiEthni");
            viewString.Append("c_Ownership], \r\n            T.Ethnicity_Filipino AS [Vendor.Ethnicity_Filipino],");
            viewString.Append(" \r\n            T.Gender_Female AS [Vendor.Gender_Female], \r\n            T.Gender");
            viewString.Append("_Male AS [Vendor.Gender_Male], \r\n            T.ProductsServices AS Vendor_Produc");
            viewString.Append("tsServices, \r\n            T.Auditor_Name AS [Vendor.Auditor_Name], \r\n           ");
            viewString.Append(" T.Auditor_SignedDate AS [Vendor.Auditor_SignedDate], \r\n            T.Auditor_Ad");
            viewString.Append("d AS [Vendor.Auditor_Add], \r\n            T.Assigned_ALCOLINK_Number AS [Vendor.A");
            viewString.Append("ssigned_ALCOLINK_Number], \r\n            T.Auditor_CannotAdd AS [Vendor.Auditor_C");
            viewString.Append("annotAdd], \r\n            T.Auditor_CannotAdd_Reasons AS [Vendor.Auditor_CannotAd");
            viewString.Append("d_Reasons], \r\n            T.Auditor_Resubmit AS [Vendor.Auditor_Resubmit], \r\n   ");
            viewString.Append("         True AS _from0\r\n        FROM CodeFirstDatabase.Vendor AS T\r\n    ) AS T1");
            viewString.Append("");
            return new System.Collections.Generic.KeyValuePair<string, string>("PerformersDB.Vendors", viewString.ToString());
        }
    }
}
